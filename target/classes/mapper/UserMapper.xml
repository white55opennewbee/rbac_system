<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd">
<mapper namespace="com.pc.rbac_system.mapper.UserMapper">
    <sql id="allArgs">
        username,password,icon,email,nick_name,note,create_time,login_time
    </sql>

    <insert id="addUser" parameterType="com.pc.rbac_system.model.User" keyProperty="id" useGeneratedKeys="true">
        insert into wx_user (<include refid="allArgs"/>) values (#{username},#{password},#{icon},#{email},#{nickName},#{note},#{createTime},#{loginTime})
    </insert>

    <select id="findAllUserBySearch" resultType="com.pc.rbac_system.model.User" parameterType="com.pc.rbac_system.vo.UserSearchParam">
            select * from wx_user where status &lt; 2
            <if test="null != username and  ''!= username">
                and username like concat('%',#{username},'%')
            </if>
            <if test="null != email and ''!= email">
                and email like concat('%',#{email},'%')
            </if>
            <if test="null!=createTimeBegin">
                and create_time &gt; #{createTimeBegin}
            </if>
            <if test="null!=createTimeEnd">
                and create_time &lt; #{createTimeEnd}
            </if>
    </select>

    <update id="updateUser" parameterType="com.pc.rbac_system.model.User">
        update wx_user set
        username = #{username} ,
        password = #{password},
        icon = #{icon} ,
        email = #{email},
        nick_name = #{nickName},
        note = #{note}
        where id = #{id}
    </update>

    <update id="deleteUser" parameterType="long">
        update wx_user set status = 0 where id = #{id}
    </update>

    <select id="findUserByUsername" resultType="com.pc.rbac_system.model.User" parameterType="string">
        select * from wx_user where username = #{username} and status = 1
    </select>

    <update id="resaveUserById" parameterType="long">
        update wx_user set status = 1 where id = #{id}
    </update>

    <select id="findPagesBySearch" resultType="java.lang.Long">
        select count(*) from wx_user where status &lt; 2
        <if test="null != username and  ''!= username">
            and username like concat('%',#{username},'%')
        </if>
        <if test="null != email and ''!= email">
            and email like concat('%',#{email},'%')
        </if>
        <if test="null!=createTimeBegin">
            and create_time &gt; #{createTimeBegin}
        </if>
        <if test="null!=createTimeEnd">
            and create_time &lt; #{createTimeEnd}
        </if>
    </select>

    <select id="findUserByUserId" resultType="com.pc.rbac_system.model.User" parameterType="long">
        select  * from wx_user where id = #{id}
    </select>

    <insert id="InsertUserRoles" parameterType="com.pc.rbac_system.vo.UserAndRoleParam">
        insert into wx_user_role_relation (admin_id,role_id) values
        <foreach collection="roleId" item="id" separator=",">
            (#{user.id},#{id})
        </foreach>

    </insert>

    <delete id="deleteUserRoles" parameterType="long">
        delete from wx_user_role_relation where admin_id = #{userId}
    </delete>

    <select id="findusersByRole" resultType="com.pc.rbac_system.model.User">
        select * from wx_user where id in (select admin_id from wx_user_role_relation where role_id = (select id from wx_role where name = #{roleName}))
    </select>

    <select id="findAllByRoleName" resultType="com.pc.rbac_system.model.User" parameterType="string">
        select * from wx_user where id in (select admin_id from wx_user_role_relation where role_id in (select id from wx_role where name = #{name}))

    </select>

    <select id="findTeacherByTeamId" resultType="com.pc.rbac_system.model.User" parameterType="long">
        select * from wx_user where id  = (select teacher_id from wx_teacher_team_relation where team_id = #{id})
    </select>
</mapper>